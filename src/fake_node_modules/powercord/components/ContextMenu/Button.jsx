/**
 * Powercord, a lightweight @discordapp client mod focused on simplicity and performance
 * Copyright (C) 2018-2019  aetheryx & Bowser65
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

const { React, contextMenu } = require('powercord/webpack');
const { getOwnerInstance, waitFor } = require('powercord/util');

let appOwnerInstance;
waitFor('.pc-app > .pc-app')
  .then(app => (
    appOwnerInstance = getOwnerInstance(app)
  ));

module.exports = class ButtonItem extends React.PureComponent {
  onClick () {
    if (this.props.disabled) {
      appOwnerInstance.shake(600, 5);
    } else {
      contextMenu.closeContextMenu();
      this.props.onClick();
    }
  }

  render () {
    const button = (
      <div
        className={
          `pc-item item-1Yvehc ${this.props.image ? 'pc-itemImage itemImage-htIz_v' : ''}
          ${this.props.disabled ? 'disabled' : ''}`
        }
        role='button'
        onClick={this.onClick.bind(this)}
      >
        <span style={{ color: this.props.highlight }}>
          {this.props.name}
        </span>
        {this.props.image
          ? this.getButtonImage()
          : <div className='pc-hint hint-22uc-R'>
            {this.props.hint}
          </div>}
      </div>
    );

    if (this.props.seperate) {
      return (
        <div className='pc-itemGroup itemGroup-1tL0uz seperated'>
          {button}
        </div>
      );
    }

    return button;
  }

  getButtonImage () {
    return (
      this.props.image.startsWith('fa-')
        ? <div style={{ cursor: 'pointer!important' }}
          class={`${this.props.image.endsWith('-regular')
            ? 'far'
            : this.props.image.endsWith('-brand')
              ? 'fab'
              : 'fas'}
            ${this.props.image.replace(/-regular|-brand/gi, '')} fa-fw`} />
        : <img alt className={this.props.className || ''}
          src={this.props.image} />
    );
  }
};
