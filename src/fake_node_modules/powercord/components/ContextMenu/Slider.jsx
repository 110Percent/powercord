/**
 * Powercord, a lightweight @discordapp client mod focused on simplicity and performance
 * Copyright (C) 2018-2019  aetheryx & Bowser65
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

const { AsyncComponent } = require('powercord/components');
const { React, getModuleByDisplayName } = require('powercord/webpack');

const Slider = AsyncComponent.from(getModuleByDisplayName('Slider'));

module.exports = class SliderItem extends React.PureComponent {
  constructor (props) {
    super();

    this.state = {
      percentage: props.defaultValue
    };
  }

  render () {
    const slider = (
      <div className='pc-item pc-itemSlider item-1Yvehc itemSlider-FZeYw0'>
        <div className='pc-label label-JWQiNe'>{this.props.name}</div>

        <Slider
          mini={this.props.mini !== void 0 ? this.props.mini : true}
          handleSize={this.props.handleSize}
          className={`pc-slider slider-3BOep7 ${this.props.className || ''}`}
          fillStyles={this.props.color ? { backgroundColor: this.props.color } : {}}
          defaultValue={this.props.defaultValue}
          minValue={this.props.minValue}
          maxValue={this.props.maxValue}
          disabled={this.props.disabled}
          equidistant={this.props.equidistant}
          stickToMarkers={this.props.stickToMarkers}
          markers={this.props.markers}
          onMarkerRender={this.props.onMarkerRender}
          onValueChange={this.props.onValueChange}
          onValueRender={this.props.onValueRender}
        />
      </div>
    );

    if (this.props.seperate) {
      return (
        <div className='pc-itemGroup itemGroup-1tL0uz seperated'>
          {slider}
        </div>
      );
    }

    return slider;
  }
};
